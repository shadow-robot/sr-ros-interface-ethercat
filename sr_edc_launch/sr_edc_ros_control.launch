<launch>
  <arg name="debug" default="false"/>

  <!-- HAND CONFIG-->
  <!-- The id for the right hand. It needs to be the same (but without trailing underscore) as the prefix used in the hand model. -->
  <arg name="hand_id" default="rh"/>
  <!-- The ethercat serial number for the hand -->
  <arg name="hand_serial" default="634"/>
  <!-- the path to the mapping files -->
  <arg name="mapping_path" default="$(find sr_edc_launch)/mappings/default_mappings/rh_E_v3.yaml"/>
  <!-- Allows to specify the ethernet interface/s to be used. It defaults to the value of the env var ETHERCAT_PORT
       More than one interface can be specified by concatenating them using underscore as a separator (e.g eth1_eth2_eth3) -->
  <arg name="eth_port" default="enx000ec6bfef7b"/>
  <!-- The control mode PWM (true) or torque (false) -->
  <arg name="pwm_control" default="$(optenv PWM_CONTROL 1)"/>
  <!-- Set to 0 if we don't want to run calibration controllers (e.g. for the muscle hand) -->
  <arg name="calibration_controllers" default="1"/>
  <!-- use ns or not -->
  <arg name="use_ns" default="true" />

  <!-- ARM CONFIG-->
  <!-- z coordinate of the robot (w.r.t. world frame) -->
  <arg name="initial_z" default="0.0"/>
  <arg name="arm_x_separation" default="0.0"/>
  <arg name="arm_y_separation" default="0.0"/>
  <!-- setting this parameter to false allows to load the robot_description from a higher level -->
  <arg name="load_robot_description" default="true"/>
  <!-- The robot state publisher publishing frequency  -->
  <arg name="robot_state_pub_frequency" default="100"/>
  <!-- The joint state publisher publishing frequency  -->
  <arg name="joint_state_pub_frequency" default="100"/>

  <!-- this should be false if robot_hardware param is defined elsewhere -->
  <arg name="define_robot_hardware" default="true"/>
  <arg name="hand_robot_hardware_name" default="unique_robot_hw"/>

  <param name="/use_sim_time" value="false"/>

  <!-- ROBOT CONFIG-->
  <!-- Xacro file containing the robot description we want to load -->
  <arg name="robot_description" default="'$(find sr_description)/robots/sr_hand.urdf.xacro'"/>
  <arg name="load_robot_description_command" default="xacro $(arg robot_description) prefix:=$(arg hand_id)_ initial_z:=$(arg initial_z) arm_x_separation:=$(arg arm_x_separation) arm_y_separation:=$(arg arm_y_separation)" />

  <!-- Loads the robot description from the file passed as an argument -->
  <param if="$(arg load_robot_description)" name="robot_description" command="$(arg load_robot_description_command)"/>

  <param name="/hand/mapping/$(arg hand_serial)" value="$(arg hand_id)"/>
  <param name="/hand/joint_prefix/$(arg hand_serial)" value="$(arg hand_id)_"/>

  <!-- The prefix used by the robot_state_publisher -->
  <arg name="tf_prefix" default="" />

  <!-- Load parameters for the hand -->
  <include file="$(find sr_edc_launch)/load_hand_parameters.xml">
    <arg name="hand_id" value="$(arg hand_id)"/>
    <arg name="pwm_control" value="$(arg pwm_control)"/>
    <arg name="use_ns" value="$(arg use_ns)" />
    <arg name="mapping_path" value="$(arg mapping_path)"/>
    <arg name="hand_serial" value="$(arg hand_serial)"/>
  </include>

  <include file="$(find sr_edc_launch)/sr_edc.machine"/>

  <!-- publishes joint 0s joint states on separate topic for debug/tuning -->
  <node pkg="sr_utilities" name="joint_0_pub" type="joint_0_publisher.py"/>

  <!-- ros_ethercat -->
  <rosparam if="$(arg define_robot_hardware)" subst_value="true">
    robot_hardware:
      - $(arg hand_robot_hardware_name)
  </rosparam>
  <include file="$(find sr_edc_launch)/hand_ros_control_robot_params.xml">
    <arg name="eth_port" value="$(arg eth_port)"/>
    <arg name="robot_hardware_name" value="$(arg hand_robot_hardware_name)"/>
    <arg name="right_hand_filter" value="$(eval arg('hand_id') == 'rh')"/>
    <arg name="left_hand_filter" value="$(eval arg('hand_id') == 'lh')"/>
  </include>

  <node if="$(arg debug)" name="sr_hand_robot" pkg="ros_control_robot" type="ros_control_robot" args="" output="screen" launch-prefix="gdb -ex run -args">
    <param if="$(arg pwm_control)" name="$(arg hand_id)/default_control_mode" value="PWM"/>
    <param unless="$(arg pwm_control)" name="$(arg hand_id)/default_control_mode" value="FORCE"/>
    <param name="use_ns" value="$(arg use_ns)"/>
    <param name="$(arg hand_id)/hand_serial" value="$(arg hand_serial)"/>
    <param name="image_path" value="$(find sr_movements)/movements/test.png"/>
  </node>

  <node unless="$(arg debug)" name="sr_hand_robot" pkg="ros_control_robot" type="ros_control_robot" args="" output="screen" launch-prefix="ethercat_grant">
    <param if="$(arg pwm_control)" name="$(arg hand_id)/default_control_mode" value="PWM"/>
    <param unless="$(arg pwm_control)" name="$(arg hand_id)/default_control_mode" value="FORCE"/>
    <param name="use_ns" value="$(arg use_ns)"/>
    <param name="$(arg hand_id)/hand_serial" value="$(arg hand_serial)"/>
    <param name="image_path" value="$(find sr_movements)/movements/test.png"/>
  </node>

  <group if="$(arg calibration_controllers)">
    <node name="calibrate_sr_edc" pkg="sr_utilities" type="calibrate_hand_finder.py" output="screen"/>
  </group>

  <!-- diagnostic aggregator for being able to see the results in the robot_monitor -->
  <include file="$(find sr_hand_config)/common/launch/load_diagnostic_analyzer.launch"  ns="diagnostic_aggregator">
    <arg name="hand_serials_list" value="[$(arg hand_serial)]"/>
  </include>

  <node name="conditional_delayed_rostool_diagnostic_aggregator" pkg="sr_utilities_common" type="conditional_delayed_rostool.py" output="screen">
    <param name="package_name" value="diagnostic_aggregator" />
    <param name="executable_name" value="aggregator_node" />
    <rosparam param="params_list">[/diagnostic_aggregator/analyzers]</rosparam>
  </node>

  <!-- Joint state publisher -->
  <include file="$(find ros_ethercat_model)/launch/joint_state_publisher.launch">
    <arg name="publish_rate" value="$(arg joint_state_pub_frequency)"/>
  </include>

  <!-- Robot state publisher: transforming the joints angles to tf.  -->
  <node name="conditional_delayed_rostool_robot_state_publisher" pkg="sr_utilities_common" type="conditional_delayed_rostool.py" output="screen">
    <param name="package_name" value="robot_state_publisher" />
    <param name="executable_name" value="robot_state_publisher" />
    <rosparam param="params_list">[/robot_description]</rosparam>
    <param name="launch_args_list" value="
    publish_frequency=$(arg robot_state_pub_frequency)
    tf_prefix=$(arg tf_prefix)"/>
  </node>

  <!-- Adding tactile state publisher using the tf prefix as a namespace -->
  <include file="$(find sr_tactile_sensor_controller)/sr_tactile_sensor.launch">
    <arg name="hand_id" value="$(arg hand_id)"/>
    <arg name="hand_serial" value="$(arg hand_serial)"/>
  </include>

  <node name="teach_mode_node" pkg="sr_robot_launch" type="teach_mode_node" output="screen"/>

</launch>
